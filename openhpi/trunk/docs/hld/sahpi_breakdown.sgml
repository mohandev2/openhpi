<!-- ...................................................................... -->
<!-- $Id$ ......................................... -->
<!-- 
        This material may be distributed only subject to the terms and 
        conditions set forth in the Open Publication License, v1.0 or later 
        (the latest version is currently available at 
        http://www.opencontent.org/openpub/).  Distribution of substantively 
        modified version of this document is prohibited without the explicit 
        permission of the copyright holder.

        Other company, product, or service names may be trademarks or service 
        marks of others.
-->

<chapter>
  <title>SA HPI Breakdown</title>
  <para>The following chapter is designed as a primer on the SA HPI
    specification.  It is meant to represent the OpenHPI teams
    interpretation and explaination of various portions of the spec as we
    see it, and to help new users and developers come up to speed quickly
    in understanding the specification.  This chapter should always be
    considered a work in progress, and any questions or comments on it
    should be sent to the openhpi-devel@lists.sf.net mailing list.
  </para>
  <sect1>
    <title>10,000 foot view</title>
    <sect2>
      <title>Resources</title>
      <para>
        HPI provides a platform management interface which is entirely
        based on resources.  The crux of the entire HPI model is the
        Resource Presence Table (RPT).  Everything which can exist
        physically is represented in the RPT.  Every domain (we'll
        address domains later) contains one, and only one RPT.
      </para>
      <para>
        The RPT is a concept in HPI, though it isn't actually a data
        structure.  It is expected that implementers will create the
        proper data structure to encapsulate it.  What is specified is 2
        types of information:
      </para>
      <itemizedlist mark='opencircle'>
        <listitem>
          <para><emphasis>SaHpiRptInfoT</emphasis> - a meta data structure that
            contains the update time and incremental counter for the RPT.
          </para>
        </listitem>
        <listitem>
          <para><emphasis>SaHpiRptEntryT</emphasis> - The actually Resource
            Presence Table entries. It is expected that there will be
            many of them.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        From here on in the term Resource will be synonymous with an
        object of SaHpiRptEntryT type.
      </para>
    </sect2>
    <sect2>
      <title>Resource Capabilities</title>
      <para>
        Every Resource has one field dedicated to capabilities of the
        resource.  This field is a 32bit vector, each bit
        corresponding to a capability.  They include:
      </para>
      <itemizedlist mark='opencircle'>
        <listitem>
          <para><emphasis>SAHPI_CAPABILITY_DOMAIN</emphasis> - the
            resource is a domain.
          </para>
        </listitem>
        <listitem>
          <para><emphasis>SAHPI_CAPABILITY_SEL</emphasis> - the
            resource has a system event log associated with it.
          </para>
        </listitem>
        <listitem>
          <para><emphasis>SAHPI_CAPABILITY_RDR</emphasis> - the
            resource has a rdr entries associated with it.  This is
            mandatory with HPI 1.0.
          </para>
        </listitem>
        <listitem>
          <para><emphasis>SAHPI_CAPABILITY_FRU</emphasis> - the
            resource is a field replacable unit.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        There are many more capabilities as well.  For a full list,
        see page 103 of the HPI 1.0 Specification.
      </para>
    </sect2>
    <sect2>
      <title>Entity Path</title>
      <para>
        Resources are the logic representation of physical things.
        They may be a rack, a chassis, or a cpu.  Internal to HPI all
        resources are identified by a ResourceId.  However, the
        enumeration of this value is very implementation specific, so
        may not always be the best way to refer to resources.
      </para>
      <para>
        All resources in HPI have an entity path.  This is a 16
        element array of SaHpiEntityT structures.  The structure
        defines an entity type, and an instance number.  For instance:
        <literal>SAHPI_ENT_DISK_BAY 0</literal>.  The entity paths
        provide the real world physical topology of the resources.  So
        it could be well understood that the resource with
        ResourceId=37 was a CPU contained in the chassis which is
        ResourceId=21.
      </para>
      <para>
        HPI entity paths go from least significant to most
        significant (i.e. the element to the right in the array is the
        container for the element on its left).
      </para>
      <para>
        <emphasis>OpenHPI Note:</emphasis> for the purposes of
        portibility OpenHPI has created a canonical string
        representation of the entity path.  It involves removing the
        SAHPI_ENT_ prefix from the types, and creating tuples for the
        entity types.  Order of significance is inverted to make
        entity paths look more like Unix directory structure. It is
        also assumed that {ROOT,0} exists implicitly before all of
        these entries.  Examples look as follows:
      </para>
      <itemizedlist mark='opencircle'>
        <listitem>
          <para>{SYSTEM_CHASSIS,2}{PROCESSOR_BOARD,0}</para>
        </listitem>
        <listitem>
          <para>{COMPACTPCI_CHASSIS,1}{IO_BLADE,12}</para>
        </listitem>
      </itemizedlist>
   </sect2>
    <sect2>
      <title>Resource Data Records</title>
      <para>
        
      </para>
    </sect2>
  </sect1>
  <sect1>
    <title>SA HPI Data Structures</title>
    <sect2>
      <title>RPT Data Structures</title>
      <para>
        The following is an unrolling of SA HPI Data Structures
        surrounding the RPT.  For sake of sanity, it is unrolled only
        as far as the high level RDR types.  Those are broken down later.
      </para>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/saf_hpi_rpt.png">
        </imageobject>
      </mediaobject>
    </sect2>
  </sect1>
</chapter>
