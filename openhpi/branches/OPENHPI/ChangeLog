2003-07-10  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c, src/plugins/ipmi/ipmi.h, src/plugins/ipmi/ipmi_sensor.c:
	Update code for get/set sensor event enable.

2003-07-10  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/safhpi.c: * Fix last stupid bug

	* src/safhpi.c: * fix a stupid bug in typo error

2003-07-09  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/Makefile.in: Not invalid.

	* src/plugins/ipmi/Makefile.am, src/plugins/ipmi/Makefile.in, src/plugins/ipmi/ipmi.c, src/plugins/ipmi/ipmi.h, src/plugins/ipmi/ipmi_event.c, src/plugins/ipmi/ipmi_sensor.c:
	Split ipmi.c into 3 files.

2003-07-08  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c:
	Add function for reading and setting sensor thresholds.

2003-07-04  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c: Add get sensor thresholds functionality.

2003-07-04  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h, src/event.c, src/eventlog.c, src/plugins/dummy/dummy.c:
	* add event log. domain event log is OK, but resource event log needs redesign
	in event log interface

2003-07-04  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c:
	Now the code is updated, RPT, RDR table can be created. And sensor reading can be get.

2003-07-03  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h, src/domain.c, src/eventlog.c, src/safhpi.c:
	* add event log IN PROGRESS

2003-07-02  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/eventlog.c, src/safhpi.c, include/openhpi.h:
	* add system event log IN PROGRESS

	* include/openhpi.h, src/Makefile.am, src/domain.c, src/eventlog.c, src/safhpi.c:
	* system event log IN PROGRESS

2003-06-25  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c: Reconstruct the code.

2003-06-24  kxgao  <kxgao@hawk.sh.intel.com>

	* src/plugins/ipmi/Makefile.am, src/plugins/ipmi/ipmi.c:
	Update ipmi code, now we can build RPT, RDR, and examples/list_resources can run properly.

2003-06-20  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/safhpi.c: * fix return value to comply spec

2003-06-20  sdague  <sdague@hawk.sh.intel.com>

	* src/config.c:
	fix a dumb error in walking the plugin list.  Need to do less coding in
	meetings. ;)

2003-06-19  sdague  <sdague@hawk.sh.intel.com>

	* include/oh_config.h, include/openhpi.h, src/config.c, src/plugin.c, src/safhpi.c:
	make plugin loading more granular

2003-06-19  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/watchdog/watchdog.c:
	* fix 'translation timescale between HPI and kernel' bug

2003-06-18  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c, src/safhpi.c: * add reset stub

	* src/plugins/dummy/dummy.c, src/safhpi.c: * add configuration stub

	* include/oh_plugin.h, src/plugins/dummy/dummy.c, src/safhpi.c:
	* a little hacking dummy.c to pass CT ei_001

	* include/openhpi.h, src/event.c, src/safhpi.c:
	* fix missed type checking in safhpi.c:get_rdr

2003-06-16  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c, src/safhpi.c: * add inventory support

2003-06-10  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/watchdog/watchdog.c:
	Taking advantage of the new configuration bits in the infrastructure
	to pull the name of the watchdog char device from the config file instead
	of hard coding /dev/watchdog.

	* src/plugin.c:
	Initializing new oh_handler structure so the GSList of resources
	is always NULL like an empty GSList should be.

2003-06-09  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c, src/event.c, src/hotswap.c, src/safhpi.c, include/openhpi.h:
	* hotswap is WORKING now. Need more refactoring...

	* src/plugins/dummy/dummy.c, src/safhpi.c: * add more hotswap functions

	* src/plugins/dummy/dummy.c, include/openhpi.h, src/Makefile.am, src/event.c, src/hotswap.c, src/safhpi.c:
	* add hotswap. IN PROGRESS

2003-06-06  sdague  <sdague@hawk.sh.intel.com>

	* include/openhpi.h, src/config.c, src/plugin.c, configure.in, include/oh_config.h:
	use a conf file for loading handlers instead of hard coding it

2003-06-03  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugin.c: * Spell checking

	* src/plugins/dummy/dummy.c: * Change dummy to pass CT sf201

2003-06-02  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: * fix miss-used memcpy in dummy.c

	* src/plugins/watchdog/watchdog.c, src/plugins/dummy/dummy.c, src/safhpi.c, include/oh_plugin.h:
	* Change id reference into solid id in interface

	* include/oh_plugin.h, src/plugins/dummy/dummy.c:
	* Move get_interface into oh_plugin.h
	* Fix miss-used SA_OK (should be raw zero) in dummy.c

	* src/plugins/dummy/dummy.c:
	* Add dummy_set/get_event_enables to pass conformance test sf_401

	* src/plugins/dummy/dummy.c:
	* refactoring a little in dummy control/sensor structure

	* src/plugins/dummy/dummy.c, src/safhpi.c:
	* Fix bug in double-counting res id

	* src/event.c: * Fix bug in double-counting resource id

	* src/resource.c: * fix bug in doouble counting resource id

	* include/oh_plugin.h:
	* add missed event_enables functions into interface

2003-05-30  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/watchdog/watchdog.c:
	Converting watchdog to use glib-1.2 single linked list

2003-05-30  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/session.c: * Fix a memory leak in session_pop_event

2003-05-30  kxgao  <kxgao@hawk.sh.intel.com>

	* src/safhpi.c: Fix bugs

2003-05-29  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/safhpi.c: * Fix status bug in Initialize/Final

2003-05-28  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/event.c, src/plugins/dummy/dummy.c, src/safhpi.c, src/session.c:
	* Fix in session_pop_event
	* Mock events from dummy

	* src/plugins/dummy/dummy.c, include/openhpi.h, src/event.c, src/resource.c, src/safhpi.c, src/session.c, include/oh_plugin.h:
	* add event support

2003-05-27  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/oh_plugin.h, src/plugins/dummy/dummy.c:
	* remove open_domain function in abi

2003-05-27  kxgao  <kxgao@hawk.sh.intel.com>

	* docs/hpi_ts.pdf:
	Remove hpi_ts.pdf, you can find test spec in hpitest sub project.

2003-05-26  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/config.c, src/domain.c, src/event.c, src/resource.c, src/safhpi.c, src/session.c, include/openhpi.h:
	* add 'g_slist_for_each' macro to clean inefficient code.

	* Makefile.am: * Add cscope tags

2003-05-23  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/config.c: * Fix bug when OpenHPI can not load plugin

2003-05-22  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h, src/domain.c:
	* Move global_domain_list into domain.c

	* include/openhpi.h, src/config.c, src/domain.c, src/safhpi.c:
	* refactoring domain

	* include/openhpi.h, src/event.c, src/resource.c, src/safhpi.c:
	* Clean up

	* src/safhpi.c: * add domain id checking in SessionOpen

	* src/event.c, src/session.c: * Add hpi_event deliver

2003-05-21  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h, src/config.c, src/domain.c, src/event.c, src/plugin.c, src/resource.c, src/safhpi.c:
	* list_resources works again. But current code is messed. I'll go into refactoring
	stage, that is, make code elegant without changing function.

	* src/config.c, src/domain.c, src/plugin.c, src/safhpi.c, include/openhpi.h:
	* more progress in making code work

	* BigBuild, configure.in:
	* disable watchdog in default because I currently focus on infrastructure.

	* src/event.c: * add new file to process event

	* src/Makefile.am, src/config.c, src/domain.c, src/resource.c, src/safhpi.c, src/session.c, include/openhpi.h:
	* make code pass building... Need more to make code work

	* include/openhpi.h, src/plugin.c, src/resource.c, src/safhpi.c:
	* Fix in progress...

2003-05-20  sdague  <sdague@hawk.sh.intel.com>

	* src/plugin.c: make plugin.c less broken

	still new an oh_new_handler function to replace function that used
	to be in load_plugin

	* include/oh_config.h, src/config.c: make config less broken

	* src/session.c:
	converted everything except session_get_events (left for Louis or Rusty)

	* src/domain.c: couple of small fixes to make domain.c work

	using #if 0 blocks on code that still needs to be migrated

	* configure.in: go back to glib 1.2

2003-05-20  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h, BigBuild:
	* Change a little according to data structure v3

	* src/Makefile.am, src/config.c, configure.in, examples/Makefile.am, include/oh_config.h:
	* change glib dependency from 1.2 to 2.0
	* add more checks in load_domain_config

2003-05-19  sdague  <sdague@hawk.sh.intel.com>

	* src/safhpi.c, src/session.c:
	fix some more session stuff, and do more conversion of safhpi.c

	* include/openhpi.h, src/domain.c, src/session.c:
	first progress checkin.  Things are broken in CVS now, but this
	puts in the header file, most of the domain.c fixes, and a few
	modifications to session.c.

	If you need the working code, check out the oh_zone_proto tag

2003-05-19  yzhuang  <yzhuang@hawk.sh.intel.com>

	* Makefile.am: * Trivial fix in 'make tags'

2003-05-16  tariqx  <tariqx@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: o Removed debug statements.
	o Verified function set_sensor_thresholds works with dummy data and
	    test app

	* src/safhpi.c: o Removed debug statements.
	o Verified function SaHpiSensorThresholdsSet works with dummy data and
		test app.

	* src/safhpi.c:
	o Fixed Typo in SaHpiSensorThresholdsGet name from Set to Get.

2003-05-16  yzhuang  <yzhuang@hawk.sh.intel.com>

	* Makefile.am, bootstrap, configure.in:
	* add useless config.h.in to reduce compiling command

2003-05-16  tariqx  <tariqx@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c:
	o Implemented dummy_sensor_thresholds_get and data.

	* src/safhpi.c: o Implemented SaHpiSensorThresholdsGet function:
		-Possible error in function, to be tested by Kevin.

2003-05-15  tariqx  <tariqx@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: o Implemented dummy_get_sensor_data

	* src/safhpi.c: o Implemented SaHpiSensorReadingConvert

2003-05-15  sdague  <sdague@hawk.sh.intel.com>

	* configure.in: missing a '"'

	* configure.in: make the error message a little more clear

2003-05-14  sdague  <sdague@hawk.sh.intel.com>

	* src/safhpi.c, src/config.c, include/oh_config.h:
	added free_domain_config function

	* src/config.c, src/plugin.c, src/safhpi.c, src/Makefile.am, include/oh_config.h, include/openhpi.h, configure.in:
	breaking out the config interface.
	delay plugin loading till saHpiSessionOpen

2003-05-14  tariqx  <tariqx@hawk.sh.intel.com>

	* include/oh_plugin.h:
	o Removed sensor_get_info since we don't need it in plugin api.

	* src/plugins/dummy/dummy.c, src/safhpi.c:
	o safhpi.c: implmented SaHpiSensorTypeGet, saHpiSensorReadingGet.
	o dummy.c: removed prototype/definition for dummy_get_sensor_info
		which was to be mapped to SaHpiGetSensorTypeGet.  We don't
		need it since it's internal to infrastructure and available
		in RDR.

2003-05-14  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: Adding ability for a control to be set

2003-05-13  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c:
	Adding support for a digital control (of type LED)

	* src/safhpi.c: * Adding infrastructure support for controls
	* Fixing a bug in saHpiDiscoverResources() that would prevent
	  an error in one of the handlers from causing an error code to
	  be returned to the HPI caller

2003-05-13  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c:
	* remove DOMAIN Capability in "Dummy-System" in dummy plugin

	* src/plugins/dummy/dummy.c:
	* add a "Dummy-Power-Temperature" RDR in dummy plugin

	* src/safhpi.c, src/session.c, include/openhpi.h:
	* merge session_discover_resources into saHpiDescoveryResource

2003-05-12  rustyl  <rustyl@hawk.sh.intel.com>

	* src/safhpi.c: Filling out implementation for watchdog HPI functions.
	NOTE: this first implementation is not very pretty, but it works.
	      when we get around to optimizing the internals of the infrastructure
	      then we should be able to redo the watchdog functions so they
	      do not have to make so many searches to find zone and resource data
	      needed to make an abi call.

2003-05-09  sdague  <sdague@hawk.sh.intel.com>

	* configure.in:
	--enable-ipmi now does the right thing based on whether or not OpenIPMI is
	available

	* configure.in: getting the hang of this autoconf stuff ;)
	enable and disable work for all 3 plugins
	default to turn on dummy and watchdog now

2003-05-09  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/watchdog/watchdog.c, src/Makefile.am, src/domain.c, src/plugin.c, src/plugins/dummy/dummy.c, src/resource.c, src/safhpi.c, src/session.c, include/list.h, include/openhpi.h:
	* Add "zone" concept to gather resources in different plugin instance into
	one domain.

2003-05-08  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/watchdog/watchdog.c:
	* Fix bug where the watchdog would get stuck in an infinit loop
	  attempting to send events
	* Added more debug statements for when DEBUG is set

2003-05-07  sdague  <sdague@hawk.sh.intel.com>

	* configure.in:
	you can now selectively enable watchdog and ipmi plugins to build.
	have to do more work to figure out how to drop dummy properly, which
	is enabled by default

	* src/plugins/Makefile.am, src/plugins/dummy/Makefile.am, src/plugins/ipmi/Makefile.am, src/plugins/watchdog/Makefile.am, configure.in:
	change arround Makefile.am to build plugins seperately.
	next step, configure options to enable them

2003-05-07  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/openhpi.h: * Remove unused field

2003-05-06  yzhuang  <yzhuang@hawk.sh.intel.com>

	* examples/list_resources.c, src/domain.c, src/plugins/dummy/dummy.c:
	* Add domain support. Plugin can send out resource with domain capability,
	in turn, the OpenHPI will call abi->open_domain to get the new domain's handler.

	* src/domain.c, src/plugin.c, include/openhpi.h:
	* change domain functions a little

	* src/safhpi.c: * Use macro to reduce duplicated code.

2003-05-06  kxgao  <kxgao@hawk.sh.intel.com>

	* examples/list_resources.c: Add the functionality of list rdr table.

2003-05-06  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: * Move event_array to the end of file.

	* src/plugins/dummy/dummy.c, src/plugins/watchdog/watchdog.c, include/oh_plugin.h, include/openhpi.h, src/domain.c, src/resource.c:
	* split oh_id into oh_resource_id and oh_rdr_id.
	* The two kinds of ids are generated by plugin. Open HPI use them to
	* refer corresponding resource/rdr.

2003-05-06  sdague  <sdague@hawk.sh.intel.com>

	* src/plugin.c, include/oh_config.h, include/oh_plugin.h:
	move config stuff to its own header file
	search path now works for example
	adding more std headers as I go

	* src/plugin.c, src/safhpi.c, include/oh_plugin.h, include/openhpi.h:
	add load_plugin function seperate from init_plugin.  This allows
	plugin loading to occur at a different time then saHpiInitialize (change
	coming later)

	This also sets up the lt_dlsearchpath.  The example script won't run till
	we modify build to put the plugins in the right location.  This is the
	next change that will come.

2003-05-06  yzhuang  <yzhuang@hawk.sh.intel.com>

	* include/oh_plugin.h, src/plugins/dummy/dummy.c, src/plugins/watchdog/watchdog.c:
	* Remove rusty's private both in oh_rdr_event and in oh_abi beacuse
	* there are two kinds of oh_id, Resource ID and RDR ID. The RDR Id includes
	* a 'void *ptr' member to help plugin find the RDR data back.

2003-05-06  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/Makefile.am, src/plugins/watchdog/watchdog.c:
	Adding a new (and untested) plug-in that wraps the standard Linux
	/dev/watchdog interface documented in the watchdog-api.txt kernel
	documentation.

2003-05-02  rustyl  <rustyl@hawk.sh.intel.com>

	* include/oh_plugin.h, include/openhpi.h, src/plugins/dummy/dummy.c, src/safhpi.c, src/session.c:
	Adding 'discover_resources' function to the plugin interface.

	* src/plugins/dummy/dummy.c, include/oh_plugin.h:
	Adding a private member for plugins to attach to RDR's that will be
	passed back to the plugin when an operation is performed on an RDR so
	the plugin knows which RDR the operation is refering to.

	The previous interface would only let the plugin know the resource, so that
	you would get a situation like:

	"Plugin, for resource XXXX (via the oid), tell me the sensor reading."

	But a given resource can be associated with multiple entities, and each
	entity can have multiple sensors, so the plugin would not have enough
	information to service the request.

	Now when the plug-in allocates a new RDR for a specific sensor associated
	with a specific entity on a specific resource, the plug-in will pass a
	private data structure along with the RDR structure.  The infrastructure
	will forward that private data to the plug-in when the RDR specific plug-in
	calls are made.

2003-04-30  sdague  <sdague@hawk.sh.intel.com>

	* README: added requirements

2003-04-30  yzhuang  <yzhuang@hawk.sh.intel.com>

	* configure.in: * As you wish, make '-Werror' back! ;-)

	* src/plugins/dummy/dummy.c: * Fix a typo bug in initializer

	* src/plugins/dummy/dummy.c, src/resource.c, src/safhpi.c, src/domain.c, include/openhpi.h, include/oh_plugin.h:
	* add RDR support

	* configure.in: * Remove '-Werror' because it is too crucial.
	* It does NOT mean we shall compromise code quality.
	* I just do not want some trivial warning break building.

2003-04-29  rustyl  <rustyl@hawk.sh.intel.com>

	* docs/openhpi_use_case.txt: Adding use case text document.

	* examples/list_resources.c:
	further completing the example by adding code to list the entity path
	for each detected entity.

2003-04-29  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/domain.c, src/plugins/dummy/dummy.c, src/resource.c, src/safhpi.c, src/session.c, include/openhpi.h, include/oh_plugin.h:
	* A big change here! The infrastructure looks more elegant now
	*	Let oh_event return RESOURCE/RDR information.
	*	Reduce type of oh_id

	* src/plugins/Makefile.am, configure.in:
	* disable IPMI plugin temporarily beause big change in OpeHPI

2003-04-28  sdague  <sdague@hawk.sh.intel.com>

	* include/openhpi.h: Rework dbg to work on gcc 2.95.4
	Include standard header

2003-04-28  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c: * fix the issue with GCC 2.95.xx

	* src/plugins/dummy/dummy.c, include/oh_plugin.h, include/openhpi.h, src/resource.c, src/safhpi.c:
	* add 'get_res_info' in plugin interface.

	* src/plugins/dummy/dummy.c, src/plugins/ipmi/ipmi.c, src/domain.c, src/resource.c, src/session.c, include/openhpi.h, include/oh_plugin.h:
	* Concentrate all types into 'oh_id_type'

	* src/resource.c: * Fix misused 'memcpy' instead of 'memcmp'

	* src/plugins/dummy/dummy.c: * reconstruct dymmy from list to array

	* src/plugins/dummy/dummy.c:
	* Make trace/info/err conform GCC Manual/Section "Varbric Macro"

	* include/openhpi.h:
	* Make dbg conform GCC Manual/Section "Vairadic Macros"

2003-04-25  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/dummy/dummy.c, include/oh_plugin.h:
	* change struct oh_id. Keeping a bulk of data as identity is unnecessary. Current, oh_id just keeps a opaque to make plugin find corresponding data.

	* src/plugins/ipmi/ipmi.c: * fix build

2003-04-25  rustyl  <rustyl@hawk.sh.intel.com>

	* docs/test_specification/Makefile.am, docs/test_specification/authors.dtd, docs/test_specification/bookinfo.sgml, docs/test_specification/environment.sgml, docs/test_specification/features.sgml, docs/test_specification/introduction.sgml, docs/test_specification/legal.dtd, docs/test_specification/revisions.dtd, docs/test_specification/strategies.sgml, docs/test_specification/test_specification.sgml, configure.in, docs/Makefile.am:
	Removing test_specification document.  The proper place for this document
	is how in the hpitest module.

2003-04-24  rustyl  <rustyl@hawk.sh.intel.com>

	* Makefile.am: Adding TAGS target that will include our header files

	* src/plugins/dummy/dummy.c:
	Adding get_interface() interface so that the dummy pluggin will work with the
	recent changes to the plugin loader.

	* src/plugins/ipmi/ipmi.c, src/domain.c, src/plugins/dummy/dummy.c, src/resource.c, include/oh_plugin.h, include/openhpi.h:
	Removing anonymous unions from our tree to enable debian systems with
	older versions of gcc.

	* src/plugins/ipmi/ipmi.c:
	Adding a couple of definitions that will fix the build, but not
	functionality.

2003-04-24  sdague  <sdague@hawk.sh.intel.com>

	* configure.in:
	added more verbose fail messages for when requirements are provided

2003-04-24  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugins/ipmi/ipmi.c, src/plugins/ipmi/os.c, src/plugins/Makefile.am:
	* remove GPLed os.c, tye default os_hanler should be included in libOpenIPMI
	  Notice, it needs an OpenIPMI CVS branch

	* examples/Makefile.am: * remove unused include path

	* nukem.sh: * trivial cleanup for nukem.sh

	* stamp-h.in: * remove stamp-h.in because we do not use config.h

	* configure.in:
	* remove AC_FUNC_MALLOC check because we never use strange 'malloc(0)'

	* docs/Makefile.am, missing, mkinstalldirs, ltmain.sh, install-sh, Makefile.am:
	* remove auto-generated files

	* Makefile.am: * Add clean files

2003-04-23  sdague  <sdague@hawk.sh.intel.com>

	* configure.in:
	quick pass to add some required checks to the configure script.
	includes a fatal message if uuid is not found.  Probably should
	create convention on that at some point, and make other fatal messages
	on other libraries.

2003-04-23  yzhuang  <yzhuang@hawk.sh.intel.com>

	* src/plugin.c: * trivial fix for library name

	* include/oh_plugin.h, include/openhpi.h, src/Makefile.am, src/plugin.c, src/safhpi.c, configure.in, examples/Makefile.am:
	* add bootstrap plugin support. In turn, the bootstrap plugin might add additional domains/plugins. It is more flexible than hard-code.

	* src/plugins/dummy/Makefile.am, src/plugins/ipmi/Makefile.am, src/plugins/Makefile.am, src/plugins/plugins.c:
	* concentrate all plugins in 'plugins' directory
	* remove static linking 'plugins.c' file

	* src/plugins/ipmi/ipmi.c, include/list.h: * enhance 'list'
	* fix a memory leak.

2003-04-22  rustyl  <rustyl@hawk.sh.intel.com>

	* docs/Makefile.am: Moving the test_specification to the hpitest module

	* docs/test_specification/Makefile.am, docs/test_specification/authors.dtd, docs/test_specification/bookinfo.sgml, docs/test_specification/environment.sgml, docs/test_specification/features.sgml, docs/test_specification/introduction.sgml, docs/test_specification/legal.dtd, docs/test_specification/revisions.dtd, docs/test_specification/strategies.sgml, docs/test_specification/test_specification.sgml, docs/Makefile.am, configure.in:
	Adding initial DocBook version of the test specification.
	This checkin only adds the document structure, and build system
	changes.

	* docs/hld/OpenHPI_HLD.sgml, docs/hld/alternatives.sgml, docs/hld/appendix.sgml, docs/hld/assumptions_and_deps.sgml, docs/hld/bookinfo.sgml, docs/hld/design_decomposition.sgml, docs/hld/design_strategies.sgml, docs/hld/externel_apis.sgml, docs/hld/externel_data_structure.sgml, docs/hld/internel_components.sgml, docs/hld/internel_data_structure.sgml, docs/hld/internel_methods.sgml, docs/hld/introduction.sgml, docs/hld/methods_and_notations.sgml, docs/hld/system_deps.sgml, docs/hld/Makefile.am:
	Moving all content to seperate SGML files, and leaving OpenHPI_HLD.sgml
	to act as a top level structure definition for the HLD document.

	* docs/hld/Makefile.am, docs/hld/OpenHPI_HLD.sgml, docs/hld/authors.dtd, docs/hld/legal.dtd, docs/hld/revisions.dtd:
	stepwise improvements in hld docbook structure by further modularizing
	the document.
	* Legal notices is now isolated to legal.dtd
	* Author specifics is not isolated to authors.dtd
	* Revision history is not isolated to revisions.dtd

	* docs/hld/OpenHPI_HLD.sgml: * Fixed Jade warning messages
	* Change License to OPL
	* Added IBM to copyright and list of contributors

2003-04-21  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/dummy/Makefile.am, src/plugins/dummy/dummy.c:
	Adding some more meat to dummy.c so that it can generate some useful
	output when used with the example application.

	* examples/list_resources.c: Further completing the listing example

2003-04-21  yzhuang  <yzhuang@hawk.sh.intel.com>

	* bootstrap, Makefile.am: Trivial enhancements

2003-04-17  rustyl  <rustyl@hawk.sh.intel.com>

	* src/plugins/Makefile.am, src/plugins/dummy/Makefile.am, src/plugins/dummy/dummy.c, configure.in, include/oh_plugin.h:
	* Adding a new dummy plugin to aid in development
	* fixed a couple of spelling errors in the plugin interface

	* src/Makefile.am:
	Fixed build system problem that was causing the hpi examples to
	not build.

	* src/plugins/ipmi/Makefile.am, src/plugins/ipmi/ipmi.c, src/plugins/ipmi/os.c, include/list.h, include/oh_plugin.h, include/openhpi.h, src/Makefile.am, src/domain.c, src/plugins/Makefile.am, src/plugins/plugins.c, src/resource.c, src/safhpi.c, src/session.c, include/hash.h:
	Adding Louis' first shot at the base infrastructure plus an IPMI plugin.
	This check-in still has a problem that causes the 'examples' directory
	to not build.

	* nukem.sh: Adding the nukem.sh script.

	This script will clean out a project of all files that were generated
	while building.  Automake generates all kinds of file, and sometimes
	it is nice to be able to see only the code from the repository.

2003-04-16  rustyl  <rustyl@hawk.sh.intel.com>

	* Makefile.am, openhpi.spec.in:
	Added a new rpm subpackage containing the HPI examples

	* include/utils/hpi_list.h, include/utils/hpi_macros.h, include/utils/hpi_primes.h, include/utils/Makefile.am, include/utils/hpi_hash.h, include/plugins/Makefile.am, include/plugins/ipmi/Makefile.am, include/Makefile.am, Makefile.am, configure.in, openhpi.spec.in:
	Removed extra Makefile.am files and changed toplevel make and config
	files to do what the removed Makefile.am files were doing before.

	* src/plugins/ipmi/ipmi.c: Adding empty implementation file

	* lib/utils/primes.c, lib/utils/list.c, lib/utils/hash.c, lib/utils/Makefile.am:
	Removing utility functions in favor of utilizing glib

	* test/listtest.c, test/hpitestapp.h, test/hpitestapp.c, test/Makefile.am, test/hashtest.c, src/plugins/ipmi/Makefile.am, src/plugins/Makefile.am, lib/plugins/ipmi/Makefile.am, src/Makefile.am, src/safhpi.c, lib/plugins/Makefile.am, lib/safhpi.c, lib/Makefile.am, examples/Makefile.am, examples/list_resources.c, Makefile.am, configure.in, openhpi.spec.in:
	* Removing 'test' directory and instead adding 'example' directory
	  (any test cases should be added to the test suite)
	* Moving source code from the 'lib' directory to the 'src' directory

	* Makefile.am, configure.in:
	* Removing 'docs' from the default (all) target
	* Adding new 'documentation' target for building docs
	* Fixing 'rpm' target to work on newer version of RPM

	    --rustyl

2003-04-14  yzhuang  <yzhuang@hawk.sh.intel.com>

	* configure.in: fix tab-space at the end of 'configure.in'

2003-04-10  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* docs/hld/Makefile.am, include/Makefile.am, openhpi.spec.in, test/Makefile.am, README:
	Added the missing BSD license to one of the makefiles.  Also updating the spec file so that it will properly build with the changes to the docs directory.  It does not yet include the documentation in the spec file though. Also updated the README file with a little more info about build and clean.

	* bootstrap: Adding license

	* lib/Makefile.am: Adding BSD license

2003-04-08  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* Makefile.am, bootstrap, configure.in, docs/hld/Makefile.am:
	Updating build scripts to reflect new docs directory and to remove files generated by configure when doing a make maintainer-clean

2003-04-08  kxgao  <kxgao@hawk.sh.intel.com>

	* docs/hpi_ts.pdf:
	Open HPI conformance test spec draft. It defines all the test suite for HPI spec1.0.

2003-04-07  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* docs/hld_diagram.gif: Moving to hld subdirectory

	* docs/hld/Makefile.am, docs/hld/OpenHPI_HLD.sgml, docs/hld/hld_diagram.gif, docs/hld/implementation_view.png, docs/hld/physical_view.png:
	Moving design docs to new sub directory

	* docs/hld/Makefile.am, docs/hld/OpenHPI_HLD.sgml, docs/hld/hld_diagram.gif, docs/hld/implementation_view.png, docs/hld/physical_view.png:
	New file.

	* docs/hld/domain_view.png: Moving design docs to new sub directory

	* docs/hld/domain_view.png: New file.

	* docs/Makefile.am: Modifying to go to hld subdir

	* docs/OpenHPI_HLD.sgml, docs/physical_view.png, docs/domain_view.png, docs/implementation_view.png:
	Moving to hld subdir

2003-03-20  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* lib/plugins/ipmi/.deps/libhpiipmi.la.Plo:
	Removing inadvertently added file

	* lib/plugins/Makefile.am, lib/plugins/ipmi/.deps/libhpiipmi.la.Plo, lib/plugins/ipmi/Makefile.am:
	Adding a plugins subdirectory

	* lib/plugins/Makefile.am, lib/plugins/ipmi/.deps/libhpiipmi.la.Plo, lib/plugins/ipmi/Makefile.am:
	New file.

	* include/plugins/Makefile, include/plugins/Makefile.in, include/plugins/ipmi/Makefile, include/plugins/ipmi/Makefile.in:
	Inadvertently added the autogenerated files -- removing them.

	* include/plugins/Makefile, include/plugins/Makefile.am, include/plugins/Makefile.in, include/plugins/ipmi/Makefile, include/plugins/ipmi/Makefile.am, include/plugins/ipmi/Makefile.in:
	New file.

	* include/plugins/Makefile, include/plugins/Makefile.am, include/plugins/Makefile.in, include/plugins/ipmi/Makefile, include/plugins/ipmi/Makefile.am, include/plugins/ipmi/Makefile.in:
	adding plugin directory

	* docs/hld_diagram.gif: very high level breakdown of components

	* docs/Makefile.am:
	Updating with the addition of a high-level HLD diagram

	* docs/OpenHPI_HLD.sgml:
	Updating with high-level breakdown from website.

	* docs/Makefile.am:
	Adding the makefile that creates the html files from the sgml file.

	* docs/OpenHPI_HLD.sgml, Makefile.am, configure.in:
	Adding the docs directory to the build.

	* docs/domain_view.png, docs/implementation_view.png, docs/physical_view.png:
	Adding images for the design document

	* docs/OpenHPI_HLD.sgml: Adding intial design document outline

2003-03-19  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* include/Makefile.am:
	Re-checking in to see if there is an issue with the timestamp

	* lib/safhpi.c, lib/utils/Makefile.am, test/Makefile.am, test/hpitestapp.c, test/hpitestapp.h, test/listtest.c, README:
	Updating files to use SaHpi.h

	* include/SaHpi.h: Adding SA Forum's header file.

	* include/hpi_entities.h, include/hpi_events.h, include/hpi_events2.h, include/hpi_hotswap.h, include/hpi_invrdr.h, include/hpi_paramctrl.h, include/hpi_rdr.h, include/hpi_reset.h, include/hpi_rpt.h, include/hpi_sel.h, include/hpi_sensorrdr.h, include/hpi_sensors.h, include/hpi_status.h, include/hpi_types.h, include/hpi_watchdog.h, include/hpi_watchdogrdr.h, include/safhpi.h, include/Makefile.am, include/hpi_controls.h, include/hpi_ctrlrdr.h, include/hpi_eid.h:
	Removing old header files in preparation for the actual SA Forum's header file.

2003-02-11  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* Makefile.am: Adding the BSD license

	* COPYING:
	Adding the COPYING file which contains the BSD text and copyright as Intel Corporation.

2003-02-07  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* include/hpi_ctrlrdr.h, include/hpi_eid.h, include/hpi_entities.h, include/hpi_events.h, include/hpi_events2.h, include/hpi_hotswap.h, include/hpi_invrdr.h, include/hpi_paramctrl.h, include/hpi_rdr.h, include/hpi_reset.h, include/hpi_rpt.h, include/hpi_sel.h, include/hpi_sensorrdr.h, include/hpi_sensors.h, include/hpi_status.h, include/hpi_types.h, include/hpi_watchdog.h, include/hpi_watchdogrdr.h, include/safhpi.h, include/hpi_controls.h:
	Added BSD License and Copyright for Service Availability Forum.

2003-02-05  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* test/hpitestapp.c:
	Updated with better error reporting. Also added the ability to discover resources and domains.  Although it won't actually do any of that until the API is implemented.

	* test/hpitestapp.h:
	Adding better error reporting and added the ability to discover resources and domains when the API actually is implemented that far.

	* README: updating the README with the bootstrap info.

	* test/listtest.c: Adding the sample list test program.

	* test/Makefile.am: Adding the list test to the makefile

	* lib/utils/list.c: Adding the linked list implementation file.

	* lib/utils/Makefile.am: Adding the linked list source to the Makefile

	* include/utils/hpi_list.h, include/utils/hpi_macros.h:
	Adding the macros header and the doubly linked list header file.

	* include/utils/hpi_hash.h, include/utils/Makefile.am:
	created an hpi_macros header file

2003-02-04  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* include/utils/hpi_hash.h, lib/utils/hash.c, test/Makefile.am, test/hashtest.c:
	Moved static declarations to hash.c.  Fixed some warnings in hashtest.c

	* lib/utils/hash.c, lib/utils/primes.c:
	Adding another hash function and adding the hpi_primes.h include file to primes.c

	* include/utils/hpi_hash.h: Adding TRUE and FALSE defines

	* lib/utils/hash.c: Adding stdlib.h for malloc, etc.

	* configure.in: Adding compiler flags

	* test/Makefile.am: Fixing typo in CFLAGS

	* bootstrap:
	Adding initial bootstrap script to generate configure and Makefile.in.

	* test/hashtest.c: Adding sample hash test program

	* lib/utils/Makefile.am, lib/utils/hash.c, lib/utils/primes.c:
	New file.

	* lib/utils/Makefile.am, lib/utils/hash.c, lib/utils/primes.c:
	initial hash implementation

	* include/utils/Makefile.am, include/utils/hpi_hash.h, include/utils/hpi_primes.h:
	New file.

	* include/utils/Makefile.am, include/utils/hpi_hash.h, include/utils/hpi_primes.h:
	initial hash functions

	* include/Makefile.am, include/hpi_controls.h, include/hpi_ctrlrdr.h, include/hpi_eid.h, include/hpi_entities.h, include/hpi_events.h, include/hpi_events2.h, include/hpi_hotswap.h, include/hpi_invrdr.h, include/hpi_paramctrl.h, include/hpi_rdr.h, include/hpi_reset.h, include/hpi_rpt.h, include/hpi_sel.h, include/hpi_sensorrdr.h, include/hpi_sensors.h, include/hpi_status.h, include/hpi_types.h, include/hpi_watchdog.h, include/hpi_watchdogrdr.h, include/safhpi.h, lib/Makefile.am, lib/safhpi.c, test/Makefile.am, configure.in:
	Updating header files with copyright info.

2003-01-30  abrugger1701  <abrugger1701@hawk.sh.intel.com>

	* test/hpitestapp.c, test/Makefile.am:
	Adding sample test app that uses the library.

	* lib/Makefile.am, lib/safhpi.c:
	Adding skeleton library implementation and makefile.

	* include/hpi_rdr.h, include/hpi_reset.h, include/hpi_rpt.h, include/hpi_sel.h, include/hpi_sensorrdr.h, include/hpi_sensors.h, include/hpi_status.h, include/hpi_types.h, include/hpi_watchdog.h, include/hpi_watchdogrdr.h, include/safhpi.h, include/Makefile.am, include/hpi_controls.h, include/hpi_ctrlrdr.h, include/hpi_eid.h, include/hpi_entities.h, include/hpi_events.h, include/hpi_events2.h, include/hpi_hotswap.h, include/hpi_invrdr.h, include/hpi_paramctrl.h:
	Adding header files

	* Makefile.am, README, configure.in, install-sh, ltmain.sh, missing, mkinstalldirs, openhpi.spec.in, stamp-h.in:
	Adding autoconf and automake files



